const User = require('../models/User');
const { hashPassword } = require('../utils/auth');
require('dotenv').config();

async function createFirstAdmin() {
    try {
        console.log('üîß Creando primer administrador del sistema...');
        
        // Verificar si ya existe un admin
        const existingAdmin = await User.findByRole('admin');
        if (existingAdmin.length > 0) {
            console.log('‚ö†Ô∏è  Ya existe un administrador en el sistema');
            console.log('üìã Administradores existentes:');
            existingAdmin.forEach(admin => {
                console.log(`   - ${admin.nombre} ${admin.apellido} (${admin.email})`);
            });
            return;
        }

        // Datos del primer administrador
        const adminData = {
            nombre: 'Administrador',
            apellido: 'Sistema',
            email: 'admin@barberia.com',
            telefono: '+1234567890',
            nombreBarberia: 'Barber√≠a Principal',
            direccion: 'Direcci√≥n de la barber√≠a',
            descripcion: 'Barber√≠a principal del sistema',
            password: 'Admin123!',
            rol: 'admin'
        };

        // Verificar que el email no existe
        const existingUser = await User.findByEmail(adminData.email);
        if (existingUser) {
            console.log('‚ùå Ya existe un usuario con ese email');
            return;
        }

        // Crear el administrador
        const newAdmin = await User.create(adminData);
        
        console.log('‚úÖ Administrador creado exitosamente!');
        console.log('üìã Detalles del administrador:');
        console.log(`   Nombre: ${newAdmin.nombre} ${newAdmin.apellido}`);
        console.log(`   Email: ${newAdmin.email}`);
        console.log(`   Contrase√±a: ${adminData.password}`);
        console.log(`   Rol: ${newAdmin.rol}`);
        console.log('');
        console.log('üîê Credenciales de acceso:');
        console.log(`   Email: ${newAdmin.email}`);
        console.log(`   Contrase√±a: ${adminData.password}`);
        console.log('');
        console.log('‚ö†Ô∏è  IMPORTANTE: Cambia la contrase√±a despu√©s del primer inicio de sesi√≥n');
        console.log('');
        console.log('üîë C√≥digos de registro configurados:');
        console.log(`   C√≥digo para barberos: ${process.env.REGISTRATION_CODE || 'ALEXIS2024'}`);
        console.log(`   C√≥digo para administradores: ${process.env.ADMIN_REGISTRATION_CODE || 'ADMIN2024'}`);

    } catch (error) {
        console.error('‚ùå Error al crear administrador:', error.message);
        process.exit(1);
    }
}

// Ejecutar el script
createFirstAdmin().then(() => {
    console.log('‚úÖ Script completado');
    process.exit(0);
}).catch(error => {
    console.error('‚ùå Error en el script:', error);
    process.exit(1);
});
